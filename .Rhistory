knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(here)
library(janitor)
library(lubridate)
library(RColorBrewer)
library(dbplyr)
#left join, rename column and row in composite loc to new column and row. make old locations = to column and row in sample
composite = composite.master %>%
rename(new_column = column, new_row = row, new_plate_number = plate_number) %>%
filter(!is.na(old_row)) %>%
mutate(old_column = as.numeric(old_column)) %>%
mutate(old_plate = as.numeric(old_plate))
composite.master = read_csv(here("data", "sos_tippulling_sequencing - composite_locations.csv"))%>%
clean_names()
sample = read_csv(here("data", "sos_tippulling_sequencing - sample_locations.csv"))%>%
clean_names()
#left join, rename column and row in composite loc to new column and row. make old locations = to column and row in sample
composite = composite.master %>%
rename(new_column = column, new_row = row, new_plate_number = plate_number) %>%
filter(!is.na(old_row)) %>%
mutate(old_column = as.numeric(old_column)) %>%
mutate(old_plate = as.numeric(old_plate))
master.joined = left_join(composite, sample, c("old_plate" = "plate_number", "old_column" = "column", "old_row" = "row"))
View(master.joined)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(here)
library(janitor)
library(lubridate)
library(RColorBrewer)
library(dbplyr)
composite.master = read_csv(here("data", "sos_tippulling_sequencing - composite_locations.csv"))%>%
clean_names()
sample = read_csv(here("data", "sos_tippulling_sequencing - sample_locations.csv"))%>%
clean_names()
#left join, rename column and row in composite loc to new column and row. make old locations = to column and row in sample
composite = composite.master %>%
rename(new_column = column, new_row = row, new_plate_number = plate_number) %>%
filter(!is.na(old_row)) %>%
mutate(old_column = as.numeric(old_column)) %>%
mutate(old_plate = as.numeric(old_plate))
master.joined = left_join(composite, sample, c("old_plate" = "plate_number", "old_column" = "column", "old_row" = "row"))
View(master.joined)
composite.master = read_csv(here("data", "sos_tippulling_sequencing - composite_locations.csv"))%>%
clean_names()
sample = read_csv(here("data", "sos_tippulling_sequencing - sample_locations.csv"))%>%
clean_names()
#left join, rename column and row in composite loc to new column and row. make old locations = to column and row in sample
composite = composite.master %>%
rename(new_column = column, new_row = row, new_plate_number = plate_number) %>%
filter(!is.na(old_row)) %>%
mutate(old_column = as.numeric(old_column)) %>%
mutate(old_plate = as.numeric(old_plate))
master.joined = left_join(composite, sample, c("old_plate" = "plate_number", "old_column" = "column", "old_row" = "row"))
View(master.joined)
not.amplified = master.joined %>%
filter(amplified_y_n == "N")
not.amplified
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(here)
library(janitor)
library(lubridate)
library(RColorBrewer)
library(dbplyr)
not.amplified = master.joined %>%
filter(amplified_y_n == "N")
View(not.amplified)
composite.master = read_csv(here("data", "sos_tippulling_sequencing - composite_locations.csv"))%>%
clean_names()
sample = read_csv(here("data", "sos_tippulling_sequencing - sample_locations.csv"))%>%
clean_names()
#left join, rename column and row in composite loc to new column and row. make old locations = to column and row in sample
composite = composite.master %>%
rename(new_column = column, new_row = row, new_plate_number = plate_number) %>%
filter(!is.na(old_row)) %>%
mutate(old_column = as.numeric(old_column)) %>%
mutate(old_plate = as.numeric(old_plate))
master.joined = left_join(composite, sample, c("old_plate" = "plate_number", "old_column" = "column", "old_row" = "row"))
not.amplified = master.joined %>%
filter(amplified_y_n == "N")
to.sequence = master.joined %>%
filter(amplified_y_n == "Y")
View(to.sequence)
not.amplified = master.joined %>%
filter(amplified_y_n == "N")
letters[1:8]
[1] "a" "b" "c" "d" "e" "f" "g" "h"
letters[1:8]
"a" "b" "c" "d" "e" "f" "g" "h"
to.sequence = master.joined %>%
filter(amplified_y_n == "Y")%>%
mutate(sanger_plate = rep(1, each 96)%>%
to.sequence = master.joined %>%
filter(amplified_y_n == "Y")%>%
mutate(sanger_plate = rep(1, times=96)%>%
mutate(sanger_column = rep(1:12, times=8))%>%
mutate(sanger_row = rep(1:8, times=8)
to.sequence = master.joined %>%
filter(amplified_y_n == "Y")%>%
mutate(sanger_plate = rep(1, times=96))%>%
mutate(sanger_column = rep(1:12, times=8))%>%
mutate(sanger_row = rep(1:8, times=8))
`rlang::last_error()`
rlang::last_error()
to.sequence = master.joined %>%
filter(amplified_y_n == "Y")%>%
mutate(sanger_plate = rep(1, each 96))%>%
to.sequence = master.joined %>%
filter(amplified_y_n == "Y")%>%
mutate(sanger_plate = rep(1, each=96))%>%
mutate(sanger_column = rep(1:12, each=8))%>%
mutate(sanger_row = rep(1:8, each=8))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(here)
library(janitor)
library(lubridate)
library(RColorBrewer)
library(dbplyr)
composite.master = read_csv(here("data", "sos_tippulling_sequencing - composite_locations.csv"))%>%
clean_names()
sample = read_csv(here("data", "sos_tippulling_sequencing - sample_locations.csv"))%>%
clean_names()
#left join, rename column and row in composite loc to new column and row. make old locations = to column and row in sample
composite = composite.master %>%
rename(new_column = column, new_row = row, new_plate_number = plate_number) %>%
filter(!is.na(old_row)) %>%
mutate(old_column = as.numeric(old_column)) %>%
mutate(old_plate = as.numeric(old_plate))
master.joined = left_join(composite, sample, c("old_plate" = "plate_number", "old_column" = "column", "old_row" = "row"))
not.amplified = master.joined %>%
filter(amplified_y_n == "N")
to.sequence = master.joined %>%
filter(amplified_y_n == "Y")%>%
mutate(sanger_plate = rep(1, each=96))%>%
mutate(sanger_column = rep(1:12, each=8))%>%
mutate(sanger_row = rep(1:8, each=8))
View(to.sequence)
to.sequence = master.joined %>%
filter(amplified_y_n == "Y")%>%
mutate(sanger_plate = rep(1:2, each=96))%>%
mutate(sanger_column = rep(1:12, each=8))%>%
vec <- LETTERS[1:8]%>%
mutate(sanger_row = rep(vec, each=8))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(here)
library(janitor)
library(lubridate)
library(RColorBrewer)
library(dbplyr)
plate_seq = rep(1:100, each = 96)
column_seq = rep(rep(1:12, each = 8),100)
row_seq = rep(rep(letters[1:8], 12), 100)
to.sequence = master.joined %>%
filter(amplified_y_n == "Y")%>%
mutate(sanger_plate = plate_seq[1:nrow(to.sequence)])%>%
mutate(sanger_column = column_seq[1:nrow(to.sequence)]) %>%
mutate(sanger_row = row_seq[1:nrow(to.sequence)]) %>%
relocate(sample, 1)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(phyloseq)
installed.packages("phyloseq")
install.packages("phyloseq")
install.packages("biocmanager")
install.packages("BiocManager")
BiocManager::install("phyloseq")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(phyloseq)
library(vegan)
library(here)
library(janitor)
library(gridExtra)
library(dada2)
install.packages("dada2")
BiocManager::install("dada2")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(phyloseq)
library(vegan)
library(here)
library(janitor)
library(gridExtra)
library(dada2)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(phyloseq)
library(vegan)
library(here)
library(janitor)
library(gridExtra)
library(dada2)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(phyloseq)
library(vegan)
library(here)
library(janitor)
library(gridExtra)
library(dada2)
sos_consensus = read_csv(here("data", "june_22_consensus.csv")) %>%
clean_names() %>%
dplyr::select(name, sequence) %>%
rename(sequence_list_name = name)
sos_consensus = read_csv(here("sanger", "june_22_consensus.csv")) %>%
clean_names() %>%
dplyr::select(name, sequence) %>%
rename(sequence_list_name = name)
sos_consensus = read_csv(here("data","sanger", "june_22_consensus.csv")) %>%
clean_names() %>%
dplyr::select(name, sequence) %>%
rename(sequence_list_name = name)
View(sos_consensus)
sos_tips = read_csv(here("data", "sanger", "june_22_contigs.csv"))
View(sos_tips)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(phyloseq)
library(vegan)
library(here)
library(janitor)
library(gridExtra)
library(dada2)
sos_consensus = read_csv(here("data", "sanger", "june_22_consensus.csv")) %>%
clean_names() %>%
dplyr::select(name, sequence) %>%
rename(sequence_list_name = name)
sos_tips = read_csv(here("data", "sanger", "june_22_contigs.csv"))
View(sos_tips)
sos_tips = read_csv(here("data", "sanger", "june_22_contigs.csv")) %>%
clean_names() %>%
filter(!is.na(percent_gc)) %>%
separate(name, c("plate", "plate_number", "location"))
sos_tips = read_csv(here("data", "sanger", "june_22_contigs.csv")) %>%
clean_names()
sos_tips = read_csv(here("data", "sanger", "june_22_contigs.csv")) %>%
clean_names() %>%
separate(name, c("plate", "plate_number", "location"))
sos_tips = read_csv(here("data", "sanger", "june_22_contigs.csv")) %>%
clean_names()
sos_tips = read_csv(here("data", "sanger", "june_22_contigs.csv")) %>%
clean_names() %>%
separate(name, c("plate", "plate_number", "location"))
sos_tips = read_csv(here("data", "sanger", "june_22_contigs.csv")) %>%
clean_names() %>%
separate(name, c("plate", "plate_number", "location")) %>%
mutate(plate_number = as.numeric(plate_number))%>%
mutate(column = as.numeric(column))
sos_tips = read_csv(here("data", "sanger", "june_22_contigs.csv")) %>%
clean_names() %>%
separate(name, c("plate", "plate_number", "location")) %>%
mutate(plate_number = as.numeric(plate_number))
sos_tips = read_csv(here("data", "sanger", "june_22_contigs.csv")) %>%
clean_names() %>%
separate(name, c("plate", "plate_number", "location"))
sos_tips = read_csv(here("data", "sanger", "june_22_contigs.csv")) %>%
clean_names() %>%
separate(name, c("plate", "plate_numbers", "location")) %>%
mutate(plate_number = as.numeric(plate_number)) %>%
mutate(plate_number = paste(plate, plate_numbers, sep = "-")) %>%
relocate(plate_number)
sos_tips = read_csv(here("data", "sanger", "june_22_contigs.csv")) %>%
clean_names() %>%
separate(name, c("plate", "plate_numbers", "location")) %>%
mutate(plate_number = paste(plate, plate_numbers, sep = "-")) %>%
relocate(plate_number)
dplyr::select(-plate, -plate_numbers)
sos_tips = read_csv(here("data", "sanger", "june_22_contigs.csv")) %>%
clean_names() %>%
separate(name, c("plate", "plate_numbers", "location")) %>%
mutate(plate_number = paste(plate, plate_numbers, sep = "-")) %>%
relocate(plate_number) %>%
dplyr::select(-plate, -plate_numbers)
sos_consensus = read_csv(here("data", "sanger", "june_22_consensus.csv")) %>%
clean_names() %>%
dplyr::select(name, sequence) %>%
rename(sequence_list_name = name)
sos_tips = read_csv(here("data", "sanger", "june_22_contigs.csv")) %>%
clean_names() %>%
separate(name, c("plate", "plate_numbers", "location")) %>%
mutate(plate_number = paste(plate, plate_numbers, sep = "-")) %>%
relocate(plate_number) %>%
dplyr::select(-plate, -plate_numbers) %>%
left_join(sos_consensus)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(phyloseq)
library(vegan)
library(here)
library(janitor)
library(gridExtra)
library(dada2)
unite.ref <- "/Users/Gabe/Desktop/phd/ghecto/unite_db/sh_general_release_s_10.05.2021/sh_general_release_dynamic_s_10.05.2021.fasta"
tiptaxa = assignTaxonomy(sanger_sheet$sequence, unite.ref, multithread = TRUE, tryRC = TRUE)
sanger_sheet = sos_tips %>%
left_join(sample_locations)
sos_consensus = read_csv(here("data", "sos_consensus1.csv")) %>%
clean_names() %>%
dplyr::select(name, sequence) %>%
rename(sequence_list_name = name)
sos_tips = read_csv(here("data", "sos_contigs1.csv")) %>%
clean_names() %>%
filter(!is.na(percent_gc)) %>%
separate(name, c("sos", "core_id", "plate_number", "column", "row")) %>%
mutate(plate_number = as.numeric(plate_number))%>%
mutate(column = as.numeric(column)) %>%
mutate(sos_core_id = paste(sos, core_id, sep = "-")) %>%
relocate(sos_core_id) %>%
dplyr::select(1,3:6, sequence_list_name) %>%
left_join(sos_consensus)
master = read.csv(here("data", "Datasheets_and_Templates - SoilCoreMetadata.csv")) %>%
clean_names()
sample_locations = read_csv(here("data", "sos_tippulling_sequencing - sample_locations.csv")) %>%
rename(sos_core_id = sample) %>%
mutate(plate_number = as.numeric(plate_number))%>%
mutate(column = as.numeric(column)) %>%
dplyr::select(!notes)
sanger_sheet = sos_tips %>%
left_join(sample_locations)
unite.ref <- "/Users/Gabe/Desktop/phd/ghecto/unite_db/sh_general_release_s_10.05.2021/sh_general_release_dynamic_s_10.05.2021.fasta"
tiptaxa = assignTaxonomy(sanger_sheet$sequence, unite.ref, multithread = TRUE, tryRC = TRUE)
sos_tiptaxa = read_csv(here("data", "sos_tiptaxa_sanger_contigs1.csv"))
morph = sanger_sheet %>%
dplyr::select(sequence, sos_core_id, plate_number, column, row, morphotype) %>%
left_join(sos_tiptaxa) %>%
left_join(sanger_sheet %>%
dplyr::select(!core_id))
#write_csv(morph, here("data", "sos_contig_morphotyping1.csv"))
unite.ref <- "/Users/Gabe/Desktop/phd/ghecto/unite_db/sh_general_release_s_10.05.2021/sh_general_release_dynamic_s_10.05.2021.fasta"
tiptaxa = assignTaxonomy(sanger_sheet$sequence, unite.ref, multithread = TRUE, tryRC = TRUE)
